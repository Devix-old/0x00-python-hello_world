=============================================
This file to test the function matrix_divided
=============================================

Prototype: def matrix_divided(matrix, div):

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


# case 1: numbers in the matrix are integers and div is float

>>> matrix = [[1, 2, 3] , [4, 5 ,6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# case 2: div is not a number
>>> matrix = [[1, 2, 3] , [4, 5 ,6]]
>>> matrix_divided(matrix, "a")
Traceback (most recent call last):
	...
TypeError: div must be a number

# case 3: an element of the row is not a number

>>> matrix = [['a', 2, 3] , [4, 5 ,6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# case 4: rows have different size
>>> matrix = [[2, 3] , [4, 5 ,6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

# case 5: division by zero
>>> matrix = [[1, 2, 3] , [4, 5 ,6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

# Case 6: Division by positive infinity
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# Case 7: Missing one argument
>>> matrix_divided(matrix)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

# Case 8: Missing two argument
>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
